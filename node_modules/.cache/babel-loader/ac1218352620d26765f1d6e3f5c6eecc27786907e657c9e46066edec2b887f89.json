{"ast":null,"code":"var _jsxFileName = \"/Users/samanthaalanastratton/Desktop/Springboard/ReactGithub/cards/reactCards/src/Deck.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useRef } from \"react\";\nimport axios from 'axios';\nimport Card from \"./Card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Deck = () => {\n  _s();\n  // initial value of null will be replace on render due to useEffect\n  const [deck, setDeck] = useState(null);\n  const [currentCardImg, setCurrentCardImg] = useState('https://deckofcardsapi.com/static/img/back.png');\n  // set deck to a new deck \n  useEffect(() => {\n    axios.get('https://deckofcardsapi.com/api/deck/new/draw/?count=1').then(res => {\n      setDeck(`https://deckofcardsapi.com/api/deck/${res.data.deck_id}/draw/?count=1`);\n    });\n  }, []);\n  // keep track of cards clicked to trigger draw with useEffect\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: currentCardImg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \" Draw\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Deck, \"2pr/Zbji+YqVIdFsz2rgUCHrVp4=\");\n_c = Deck;\nexport default Deck;\nvar _c;\n$RefreshReg$(_c, \"Deck\");","map":{"version":3,"names":["useState","useEffect","useRef","axios","Card","jsxDEV","_jsxDEV","Fragment","_Fragment","Deck","_s","deck","setDeck","currentCardImg","setCurrentCardImg","get","then","res","data","deck_id","children","src","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/samanthaalanastratton/Desktop/Springboard/ReactGithub/cards/reactCards/src/Deck.js"],"sourcesContent":["import { useState, useEffect, useRef } from \"react\";\nimport axios from 'axios';\nimport Card from \"./Card\";\n\nconst Deck = () =>{\n  // initial value of null will be replace on render due to useEffect\n  const [deck, setDeck] = useState(null);\n  const [currentCardImg, setCurrentCardImg] = useState('https://deckofcardsapi.com/static/img/back.png')\n   // set deck to a new deck \n   useEffect(()=>{\n    axios\n    .get('https://deckofcardsapi.com/api/deck/new/draw/?count=1')\n    .then(res=>{\n      setDeck(`https://deckofcardsapi.com/api/deck/${ res.data.deck_id}/draw/?count=1`)\n    })\n  }, [])\n  // keep track of cards clicked to trigger draw with useEffect\n\n  return(\n    <>\n      <img src={currentCardImg}/>\n      <br></br>\n      <button> Draw</button>\n    </>\n  )\n}\n\nexport default Deck;"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AACnD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE1B,MAAMC,IAAI,GAAGA,CAAA,KAAK;EAAAC,EAAA;EAChB;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACa,cAAc,EAAEC,iBAAiB,CAAC,GAAGd,QAAQ,CAAC,gDAAgD,CAAC;EACrG;EACAC,SAAS,CAAC,MAAI;IACbE,KAAK,CACJY,GAAG,CAAC,uDAAuD,CAAC,CAC5DC,IAAI,CAACC,GAAG,IAAE;MACTL,OAAO,CAAE,uCAAuCK,GAAG,CAACC,IAAI,CAACC,OAAQ,gBAAe,CAAC;IACnF,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EACN;;EAEA,oBACEb,OAAA,CAAAE,SAAA;IAAAY,QAAA,gBACEd,OAAA;MAAKe,GAAG,EAAER;IAAe;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAC3BnB,OAAA;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACTnB,OAAA;MAAAc,QAAA,EAAQ;IAAK;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA,eACtB,CAAC;AAEP,CAAC;AAAAf,EAAA,CArBKD,IAAI;AAAAiB,EAAA,GAAJjB,IAAI;AAuBV,eAAeA,IAAI;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}