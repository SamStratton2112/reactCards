{"ast":null,"code":"var _jsxFileName = \"/Users/samanthaalanastratton/Desktop/Springboard/ReactGithub/cards/reactCards/src/Deck.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useRef } from \"react\";\nimport axios from 'axios';\nimport Card from \"./Card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Deck = () => {\n  _s();\n  // initial value of null will be replace on render due to useEffect\n  const [deck, setDeck] = useState(null);\n  const [currentCardImg, setCurrentCardImg] = useState('https://deckofcardsapi.com/static/img/back.png');\n  // set deck to a new deck \n  useEffect(() => {\n    axios.get('https://deckofcardsapi.com/api/deck/new/draw/?count=1').then(res => {\n      setDeck(`https://deckofcardsapi.com/api/deck/${res.data.deck_id}/draw/?count=1`);\n    });\n  }, []);\n  // keep track of cards clicked to trigger draw with useEffect\n  let cards = useRef();\n  const drawCard = () => cards = cards + 1;\n\n  // // draw from deck until cards are gone, then show back of deck\n  useEffect(() => {\n    axios.get(deck).then(res => setCurrentCardImg(res.data.cards[0].image));\n  }, [cards]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: currentCardImg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: drawCard,\n      children: \" Draw\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Deck, \"rJkMDQeCQVLLsoKe/N+s1Tj72TI=\");\n_c = Deck;\nexport default Deck;\nvar _c;\n$RefreshReg$(_c, \"Deck\");","map":{"version":3,"names":["useState","useEffect","useRef","axios","Card","jsxDEV","_jsxDEV","Fragment","_Fragment","Deck","_s","deck","setDeck","currentCardImg","setCurrentCardImg","get","then","res","data","deck_id","cards","drawCard","image","children","src","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/samanthaalanastratton/Desktop/Springboard/ReactGithub/cards/reactCards/src/Deck.js"],"sourcesContent":["import { useState, useEffect, useRef } from \"react\";\nimport axios from 'axios';\nimport Card from \"./Card\";\n\nconst Deck = () =>{\n  // initial value of null will be replace on render due to useEffect\n  const [deck, setDeck] = useState(null);\n  const [currentCardImg, setCurrentCardImg] = useState('https://deckofcardsapi.com/static/img/back.png')\n   // set deck to a new deck \n   useEffect(()=>{\n    axios\n    .get('https://deckofcardsapi.com/api/deck/new/draw/?count=1')\n    .then(res=>{\n      setDeck(`https://deckofcardsapi.com/api/deck/${ res.data.deck_id}/draw/?count=1`)\n    })\n  }, [])\n  // keep track of cards clicked to trigger draw with useEffect\n  let cards = useRef()\n  const drawCard = () => cards = cards + 1;\n\n  // // draw from deck until cards are gone, then show back of deck\n  useEffect(()=>{\n    axios.get(deck).then(res=>setCurrentCardImg(res.data.cards[0].image))\n  },[cards])\n\n  return(\n    <>\n      <img src={currentCardImg}/>\n      <br></br>\n      <button onClick={drawCard}> Draw</button>\n    </>\n  )\n}\n\nexport default Deck;"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AACnD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE1B,MAAMC,IAAI,GAAGA,CAAA,KAAK;EAAAC,EAAA;EAChB;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACa,cAAc,EAAEC,iBAAiB,CAAC,GAAGd,QAAQ,CAAC,gDAAgD,CAAC;EACrG;EACAC,SAAS,CAAC,MAAI;IACbE,KAAK,CACJY,GAAG,CAAC,uDAAuD,CAAC,CAC5DC,IAAI,CAACC,GAAG,IAAE;MACTL,OAAO,CAAE,uCAAuCK,GAAG,CAACC,IAAI,CAACC,OAAQ,gBAAe,CAAC;IACnF,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EACN;EACA,IAAIC,KAAK,GAAGlB,MAAM,CAAC,CAAC;EACpB,MAAMmB,QAAQ,GAAGA,CAAA,KAAMD,KAAK,GAAGA,KAAK,GAAG,CAAC;;EAExC;EACAnB,SAAS,CAAC,MAAI;IACZE,KAAK,CAACY,GAAG,CAACJ,IAAI,CAAC,CAACK,IAAI,CAACC,GAAG,IAAEH,iBAAiB,CAACG,GAAG,CAACC,IAAI,CAACE,KAAK,CAAC,CAAC,CAAC,CAACE,KAAK,CAAC,CAAC;EACvE,CAAC,EAAC,CAACF,KAAK,CAAC,CAAC;EAEV,oBACEd,OAAA,CAAAE,SAAA;IAAAe,QAAA,gBACEjB,OAAA;MAAKkB,GAAG,EAAEX;IAAe;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAC3BtB,OAAA;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACTtB,OAAA;MAAQuB,OAAO,EAAER,QAAS;MAAAE,QAAA,EAAC;IAAK;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA,eACzC,CAAC;AAEP,CAAC;AAAAlB,EAAA,CA5BKD,IAAI;AAAAqB,EAAA,GAAJrB,IAAI;AA8BV,eAAeA,IAAI;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}