{"ast":null,"code":"var _jsxFileName = \"/Users/samanthaalanastratton/Desktop/Springboard/ReactGithub/cards/reactCards/src/Deck.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useRef } from \"react\";\nimport axios from 'axios';\nimport Card from \"./Card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Deck = () => {\n  _s();\n  // initial value of null will be replace on render due to useEffect\n  const [deck, setDeck] = useState();\n  const [currentCardImg, setCurrentCardImg] = useState('https://deckofcardsapi.com/static/img/back.png');\n  const draw = useRef();\n  // set deck to a new deck \n  useEffect(() => {\n    axios.get('https://deckofcardsapi.com/api/deck/new/').then(res => {\n      setDeck(`https://deckofcardsapi.com/api/deck/${res.data.deck_id}/draw/?count=1`);\n    });\n  }, []);\n  // draw from deck until cards are gone, then show back of deck\n  useEffect(() => {\n    axios.get(deck).then(res => {\n      setCurrentCardImg(res.data.cards[0].image);\n    });\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      src: currentCardImg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      ref: draw,\n      children: \"Draw\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(Deck, \"Ut3YOjaOOOmecYIgFvNB4wAAgPc=\");\n_c = Deck;\nexport default Deck;\nvar _c;\n$RefreshReg$(_c, \"Deck\");","map":{"version":3,"names":["useState","useEffect","useRef","axios","Card","jsxDEV","_jsxDEV","Deck","_s","deck","setDeck","currentCardImg","setCurrentCardImg","draw","get","then","res","data","deck_id","cards","image","children","src","fileName","_jsxFileName","lineNumber","columnNumber","ref","_c","$RefreshReg$"],"sources":["/Users/samanthaalanastratton/Desktop/Springboard/ReactGithub/cards/reactCards/src/Deck.js"],"sourcesContent":["import { useState, useEffect, useRef } from \"react\";\nimport axios from 'axios';\nimport Card from \"./Card\";\n\nconst Deck = () =>{\n  // initial value of null will be replace on render due to useEffect\n  const [deck, setDeck] = useState();\n  const [currentCardImg, setCurrentCardImg] = useState('https://deckofcardsapi.com/static/img/back.png')\n  const draw = useRef()\n  // set deck to a new deck \n  useEffect(()=>{\n    axios\n    .get('https://deckofcardsapi.com/api/deck/new/')\n    .then(res=>{\n      setDeck(`https://deckofcardsapi.com/api/deck/${ res.data.deck_id}/draw/?count=1`)\n    })\n\n  }, [])\n  // draw from deck until cards are gone, then show back of deck\n  useEffect(()=>{\n    axios.get(deck).then(res=>{\n      setCurrentCardImg(res.data.cards[0].image);\n    })\n  })\n\n  return(\n    <div>\n      <Card src={currentCardImg}/>\n      <button ref={draw}>Draw</button>\n    </div>\n  )\n}\n\nexport default Deck;"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,EAAEC,MAAM,QAAQ,OAAO;AACnD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,IAAI,GAAGA,CAAA,KAAK;EAAAC,EAAA;EAChB;EACA,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGV,QAAQ,CAAC,CAAC;EAClC,MAAM,CAACW,cAAc,EAAEC,iBAAiB,CAAC,GAAGZ,QAAQ,CAAC,gDAAgD,CAAC;EACtG,MAAMa,IAAI,GAAGX,MAAM,CAAC,CAAC;EACrB;EACAD,SAAS,CAAC,MAAI;IACZE,KAAK,CACJW,GAAG,CAAC,0CAA0C,CAAC,CAC/CC,IAAI,CAACC,GAAG,IAAE;MACTN,OAAO,CAAE,uCAAuCM,GAAG,CAACC,IAAI,CAACC,OAAQ,gBAAe,CAAC;IACnF,CAAC,CAAC;EAEJ,CAAC,EAAE,EAAE,CAAC;EACN;EACAjB,SAAS,CAAC,MAAI;IACZE,KAAK,CAACW,GAAG,CAACL,IAAI,CAAC,CAACM,IAAI,CAACC,GAAG,IAAE;MACxBJ,iBAAiB,CAACI,GAAG,CAACC,IAAI,CAACE,KAAK,CAAC,CAAC,CAAC,CAACC,KAAK,CAAC;IAC5C,CAAC,CAAC;EACJ,CAAC,CAAC;EAEF,oBACEd,OAAA;IAAAe,QAAA,gBACEf,OAAA,CAACF,IAAI;MAACkB,GAAG,EAAEX;IAAe;MAAAY,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAC5BpB,OAAA;MAAQqB,GAAG,EAAEd,IAAK;MAAAQ,QAAA,EAAC;IAAI;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7B,CAAC;AAEV,CAAC;AAAAlB,EAAA,CA3BKD,IAAI;AAAAqB,EAAA,GAAJrB,IAAI;AA6BV,eAAeA,IAAI;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}