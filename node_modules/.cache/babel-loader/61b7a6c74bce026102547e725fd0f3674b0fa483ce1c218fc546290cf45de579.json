{"ast":null,"code":"var _jsxFileName = \"/Users/samanthaalanastratton/Desktop/Springboard/ReactGithub/cards/reactCards/src/Deck.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport Card from \"./Card\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Deck = () => {\n  _s();\n  const [deckId, setDeckId] = useState(null);\n  const [currentCardImg, setCurrentCardImg] = useState('https://deckofcardsapi.com/static/img/back.png');\n\n  // Define the draw function outside of useEffect\n  const draw = async () => {\n    if (deckId) {\n      const response = await axios.get(`https://deckofcardsapi.com/api/deck/${deckId}/draw/?count=1`);\n      setCurrentCardImg(response.data.cards[0].image);\n    }\n  };\n  useEffect(() => {\n    axios.get('https://deckofcardsapi.com/api/deck/new/draw/?count=1').then(res => {\n      setDeckId(res.data.deck_id);\n    });\n  }, []);\n  useEffect(() => {\n    // Use the draw function here\n    draw();\n  }, [deckId]);\n  const handleClick = () => {\n    // Do something when the button is clicked\n    // For example, trigger another draw or perform an action\n    draw();\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Card, {\n      src: currentCardImg\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleClick,\n      children: \"Draw\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Deck, \"wztu35G23tR+IX+GibAJ2yY3VtM=\");\n_c = Deck;\nexport default Deck;\nvar _c;\n$RefreshReg$(_c, \"Deck\");","map":{"version":3,"names":["useState","useEffect","axios","Card","jsxDEV","_jsxDEV","Fragment","_Fragment","Deck","_s","deckId","setDeckId","currentCardImg","setCurrentCardImg","draw","response","get","data","cards","image","then","res","deck_id","handleClick","children","src","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/samanthaalanastratton/Desktop/Springboard/ReactGithub/cards/reactCards/src/Deck.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport axios from 'axios';\nimport Card from \"./Card\";\n\nconst Deck = () => {\n  const [deckId, setDeckId] = useState(null);\n  const [currentCardImg, setCurrentCardImg] = useState('https://deckofcardsapi.com/static/img/back.png');\n\n  // Define the draw function outside of useEffect\n  const draw = async () => {\n    if (deckId) {\n      const response = await axios.get(`https://deckofcardsapi.com/api/deck/${deckId}/draw/?count=1`);\n      setCurrentCardImg(response.data.cards[0].image);\n    }\n  };\n\n  useEffect(() => {\n    axios.get('https://deckofcardsapi.com/api/deck/new/draw/?count=1')\n      .then(res => {\n        setDeckId(res.data.deck_id);\n      });\n  }, []);\n\n  useEffect(() => {\n    // Use the draw function here\n    draw();\n  }, [deckId]);\n\n  const handleClick = () => {\n    // Do something when the button is clicked\n    // For example, trigger another draw or perform an action\n    draw();\n  };\n\n  return (\n    <>\n      <Card src={currentCardImg}/>\n      <br></br>\n      <button onClick={handleClick}>Draw</button>\n    </>\n  );\n}\n\nexport default Deck;\n"],"mappings":";;AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE1B,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAC1C,MAAM,CAACY,cAAc,EAAEC,iBAAiB,CAAC,GAAGb,QAAQ,CAAC,gDAAgD,CAAC;;EAEtG;EACA,MAAMc,IAAI,GAAG,MAAAA,CAAA,KAAY;IACvB,IAAIJ,MAAM,EAAE;MACV,MAAMK,QAAQ,GAAG,MAAMb,KAAK,CAACc,GAAG,CAAE,uCAAsCN,MAAO,gBAAe,CAAC;MAC/FG,iBAAiB,CAACE,QAAQ,CAACE,IAAI,CAACC,KAAK,CAAC,CAAC,CAAC,CAACC,KAAK,CAAC;IACjD;EACF,CAAC;EAEDlB,SAAS,CAAC,MAAM;IACdC,KAAK,CAACc,GAAG,CAAC,uDAAuD,CAAC,CAC/DI,IAAI,CAACC,GAAG,IAAI;MACXV,SAAS,CAACU,GAAG,CAACJ,IAAI,CAACK,OAAO,CAAC;IAC7B,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAENrB,SAAS,CAAC,MAAM;IACd;IACAa,IAAI,CAAC,CAAC;EACR,CAAC,EAAE,CAACJ,MAAM,CAAC,CAAC;EAEZ,MAAMa,WAAW,GAAGA,CAAA,KAAM;IACxB;IACA;IACAT,IAAI,CAAC,CAAC;EACR,CAAC;EAED,oBACET,OAAA,CAAAE,SAAA;IAAAiB,QAAA,gBACEnB,OAAA,CAACF,IAAI;MAACsB,GAAG,EAAEb;IAAe;MAAAc,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAC5BxB,OAAA;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACTxB,OAAA;MAAQyB,OAAO,EAAEP,WAAY;MAAAC,QAAA,EAAC;IAAI;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA,eAC3C,CAAC;AAEP,CAAC;AAAApB,EAAA,CArCKD,IAAI;AAAAuB,EAAA,GAAJvB,IAAI;AAuCV,eAAeA,IAAI;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}